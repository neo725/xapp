/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$attention-name: 'attention';
$attention-x: 0px;
$attention-y: 0px;
$attention-offset-x: 0px;
$attention-offset-y: 0px;
$attention-width: 42px;
$attention-height: 42px;
$attention-total-width: 98px;
$attention-total-height: 477px;
$attention-image: '../img/sprite.png';
$attention: (0px, 0px, 0px, 0px, 42px, 42px, 98px, 477px, '../img/sprite.png', 'attention', );
$attention-2x-name: 'attention@2x';
$attention-2x-x: 0px;
$attention-2x-y: 379px;
$attention-2x-offset-x: 0px;
$attention-2x-offset-y: -379px;
$attention-2x-width: 98px;
$attention-2x-height: 98px;
$attention-2x-total-width: 98px;
$attention-2x-total-height: 477px;
$attention-2x-image: '../img/sprite.png';
$attention-2x: (0px, 379px, 0px, -379px, 98px, 98px, 98px, 477px, '../img/sprite.png', 'attention@2x', );
$member-name: 'member';
$member-x: 0px;
$member-y: 298px;
$member-offset-x: 0px;
$member-offset-y: -298px;
$member-width: 81px;
$member-height: 81px;
$member-total-width: 98px;
$member-total-height: 477px;
$member-image: '../img/sprite.png';
$member: (0px, 298px, 0px, -298px, 81px, 81px, 98px, 477px, '../img/sprite.png', 'member', );
$search-bar-history-2x-name: 'search_bar_history@2x';
$search-bar-history-2x-x: 0px;
$search-bar-history-2x-y: 142px;
$search-bar-history-2x-offset-x: 0px;
$search-bar-history-2x-offset-y: -142px;
$search-bar-history-2x-width: 78px;
$search-bar-history-2x-height: 78px;
$search-bar-history-2x-total-width: 98px;
$search-bar-history-2x-total-height: 477px;
$search-bar-history-2x-image: '../img/sprite.png';
$search-bar-history-2x: (0px, 142px, 0px, -142px, 78px, 78px, 98px, 477px, '../img/sprite.png', 'search_bar_history@2x', );
$search-bar-sort-2x-name: 'search_bar_sort@2x';
$search-bar-sort-2x-x: 0px;
$search-bar-sort-2x-y: 220px;
$search-bar-sort-2x-offset-x: 0px;
$search-bar-sort-2x-offset-y: -220px;
$search-bar-sort-2x-width: 78px;
$search-bar-sort-2x-height: 78px;
$search-bar-sort-2x-total-width: 98px;
$search-bar-sort-2x-total-height: 477px;
$search-bar-sort-2x-image: '../img/sprite.png';
$search-bar-sort-2x: (0px, 220px, 0px, -220px, 78px, 78px, 98px, 477px, '../img/sprite.png', 'search_bar_sort@2x', );
$shoppingcar-o-2x-name: 'shoppingcar-o@2x';
$shoppingcar-o-2x-x: 0px;
$shoppingcar-o-2x-y: 42px;
$shoppingcar-o-2x-offset-x: 0px;
$shoppingcar-o-2x-offset-y: -42px;
$shoppingcar-o-2x-width: 58px;
$shoppingcar-o-2x-height: 50px;
$shoppingcar-o-2x-total-width: 98px;
$shoppingcar-o-2x-total-height: 477px;
$shoppingcar-o-2x-image: '../img/sprite.png';
$shoppingcar-o-2x: (0px, 42px, 0px, -42px, 58px, 50px, 98px, 477px, '../img/sprite.png', 'shoppingcar-o@2x', );
$shoppingcar-name: 'shoppingcar';
$shoppingcar-x: 0px;
$shoppingcar-y: 92px;
$shoppingcar-offset-x: 0px;
$shoppingcar-offset-y: -92px;
$shoppingcar-width: 56px;
$shoppingcar-height: 50px;
$shoppingcar-total-width: 98px;
$shoppingcar-total-height: 477px;
$shoppingcar-image: '../img/sprite.png';
$shoppingcar: (0px, 92px, 0px, -92px, 56px, 50px, 98px, 477px, '../img/sprite.png', 'shoppingcar', );
$spritesheet-width: 98px;
$spritesheet-height: 477px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($attention, $attention-2x, $member, $search-bar-history-2x, $search-bar-sort-2x, $shoppingcar-o-2x, $shoppingcar, );
$spritesheet: (98px, 477px, '../img/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
